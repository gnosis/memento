/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Recovery,
  RecoveryInterface,
} from "../../../contracts/Recovery.sol/Recovery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "avatar",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_recoverers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_quorum",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoverer",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "AlreadyProposed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address",
      },
    ],
    name: "NotIERC165Compliant",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAvatar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAvatar",
        type: "address",
      },
    ],
    name: "AvatarSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "ChangedGuard",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "Replace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousTarget",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
    ],
    name: "TargetSet",
    type: "event",
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoverer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "oldOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "newOwner",
            type: "address",
          },
        ],
        internalType: "struct Recovery.Replacement[]",
        name: "replacements",
        type: "tuple[]",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address",
      },
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006068553480156200001657600080fd5b5060405162001efc38038062001efc83398101604081905262000039916200061f565b60008484848460405160200162000054949392919062000692565b60408051601f19818403018152919052905062000071816200007c565b505050505062000740565b600054610100900460ff16158080156200009d5750600054600160ff909116105b80620000cd5750620000ba306200027160201b620008b81760201c565b158015620000cd575060005460ff166001145b620001365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156200015a576000805461ff0019166101001790555b6200016462000280565b600080600080858060200190518101906200018091906200061f565b93509350935093506200019984620002e860201b60201c565b620001a48362000344565b620001af84620003a0565b606981905560005b825181101562000221576001606a6000858481518110620001dc57620001dc62000700565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002198162000716565b9050620001b7565b505050505080156200026d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620002dc5760405162461bcd60e51b815260206004820152602b602482015260008051602062001edc83398151915260448201526a6e697469616c697a696e6760a81b60648201526084016200012d565b620002e66200041f565b565b620002f262000486565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b6200034e62000486565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b620003aa62000486565b6001600160a01b038116620004115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200012d565b6200041c81620004e2565b50565b600054610100900460ff166200047b5760405162461bcd60e51b815260206004820152602b602482015260008051602062001edc83398151915260448201526a6e697469616c697a696e6760a81b60648201526084016200012d565b620002e633620004e2565b6033546001600160a01b03163314620002e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200012d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200041c57600080fd5b8051620005578162000534565b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200058457600080fd5b815160206001600160401b0380831115620005a357620005a36200055c565b8260051b604051601f19603f83011681018181108482111715620005cb57620005cb6200055c565b604052938452858101830193838101925087851115620005ea57600080fd5b83870191505b84821015620006145762000604826200054a565b83529183019190830190620005f0565b979650505050505050565b600080600080608085870312156200063657600080fd5b8451620006438162000534565b6020860151909450620006568162000534565b60408601519093506001600160401b038111156200067357600080fd5b620006818782880162000572565b606096909601519497939650505050565b60006080820160018060a01b0380881684526020818816818601526080604086015282875180855260a087019150828901945060005b81811015620006e8578551851683529483019491830191600101620006c8565b50508094505050505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200073957634e487b7160e01b600052601160045260246000fd5b5060010190565b61178c80620007506000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a2b9047311610097578063c910638911610066578063c910638914610215578063d4b8399214610226578063e19a9dd914610239578063f2fde38b1461024c57600080fd5b8063a2b90473146101cd578063a4f9edbf146101e0578063affed0e0146101f3578063b0d691fe146101fb57600080fd5b8063715018a6116100d3578063715018a61461018e578063776d1a01146101965780637ceab3b1146101a95780638da5cb5b146101bc57600080fd5b8063086cfca8146101055780631626ba7e1461011a5780633a871cdd146101425780635aef7de614610163575b600080fd5b610118610113366004611192565b61025f565b005b61012d610128366004611266565b6102b9565b60405190151581526020015b60405180910390f35b6101556101503660046112ad565b6102f3565b604051908152602001610139565b606654610176906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b610118610337565b6101186101a4366004611192565b61034b565b606554610176906001600160a01b031681565b6033546001600160a01b0316610176565b6101186101db366004611301565b6103a5565b6101186101ee366004611389565b61057e565b606854610155565b730576a174d229e3cfa37253523e645a78a0c91b57610176565b6065546001600160a01b0316610176565b606754610176906001600160a01b031681565b610118610247366004611192565b61073d565b61011861025a366004611192565b61083f565b6102676108c7565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b6000606a60006102c98585610921565b6001600160a01b0316815260208101919091526040016000205460ff161515600114905092915050565b60006102fd610945565b61030784846109a8565b905061031660408501856113c6565b151590506103275761032784610a69565b61033082610abf565b9392505050565b61033f6108c7565b6103496000610b18565b565b6103536108c7565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b6103ad610945565b60005b818110156105785760008383838181106103cc576103cc61140d565b6103e29260206040909202019081019150611192565b905060008484848181106103f8576103f861140d565b90506040020160200160208101906104109190611192565b90506000828260405160200161043c9291906001600160a01b0392831681529116602082015260400190565b60408051601f1981840301815291815281516020928301206001600160a01b038a166000908152606b845282812082825290935291205490915060ff16156104b7576040516392652d6360e01b81526001600160a01b0380891660048301528085166024830152831660448201526064015b60405180910390fd5b6001600160a01b0387166000908152606b602090815260408083208484528252808320805460ff19166001908117909155606c9092528220546104f991611439565b90506069548114156105535761050f8484610b6a565b604080516001600160a01b038087168252851660208201527ff9b9728992035fb206d0eaedc55220cb1bdb49372cd3311f2b44399a2d246c43910160405180910390a15b6000918252606c6020526040909120555081905061057081611451565b9150506103b0565b50505050565b600054610100900460ff161580801561059e5750600054600160ff909116105b806105b85750303b1580156105b8575060005460ff166001145b61061b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ae565b6000805460ff19166001179055801561063e576000805461ff0019166101001790555b610646610be1565b6000806000808580602001905181019061066091906114f5565b93509350935093506106718461025f565b61067a8361034b565b6106838461083f565b606981905560005b82518110156106ee576001606a60008584815181106106ac576106ac61140d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556106e781611451565b905061068b565b50505050508015610739576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6107456108c7565b6001600160a01b038116156107eb576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190611561565b6107eb576040516358b7533f60e11b81526001600160a01b03821660048201526024016104ae565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b6108476108c7565b6001600160a01b0381166108ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ae565b6108b581610b18565b50565b6001600160a01b03163b151590565b6033546001600160a01b031633146103495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ae565b60008060006109308585610c10565b9150915061093d81610c56565b509392505050565b33730576a174d229e3cfa37253523e645a78a0c91b57146103495760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016104ae565b600080610a02836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610a5081610a166101408701876113c6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102b992505050565b610a5b576001610a5e565b60005b60ff16949350505050565b606880546020830135916000610a7e83611451565b91905055146108b55760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b60448201526064016104ae565b80156108b557604051600090339060001990849084818181858888f193505050503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b5050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606654610bdc906001600160a01b03166000610b8585610da4565b6040516001600160a01b0391821660248201528187166044820152908516606482015260840160408051601f198184030181529190526020810180516001600160e01b031663e318b52b60e01b1790526000610e80565b505050565b600054610100900460ff16610c085760405162461bcd60e51b81526004016104ae90611583565b610349611089565b600080825160411415610c475760208301516040840151606085015160001a610c3b878285856110b9565b94509450505050610c4f565b506000905060025b9250929050565b6000816004811115610c6a57610c6a6115ce565b1415610c735750565b6001816004811115610c8757610c876115ce565b1415610cd55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104ae565b6002816004811115610ce957610ce96115ce565b1415610d375760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104ae565b6003816004811115610d4b57610d4b6115ce565b14156108b55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104ae565b6066546040805163a0e67e2b60e01b815290516001926000926001600160a01b039091169163a0e67e2b9160048082019286929091908290030181865afa158015610df3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e1b91908101906115e4565b905060005b8151811015610e79576000828281518110610e3d57610e3d61140d565b60200260200101519050846001600160a01b0316816001600160a01b03161415610e675750610e79565b9250610e7281611451565b9050610e20565b5050919050565b6065546000906001600160a01b03168015611004576040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b038316916375f0bb5291610eeb918a918a918a918a9160009182918291829182913390600401611688565b600060405180830381600087803b158015610f0557600080fd5b505af1158015610f19573d6000803e3d6000fd5b505060675460405163468721a760e01b81526001600160a01b03909116925063468721a79150610f53908990899089908990600401611717565b6020604051808303816000875af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611561565b604051631264e26d60e31b815261060f60f31b600482015281151560248201529092506001600160a01b03821690639327136890604401600060405180830381600087803b158015610fe757600080fd5b505af1158015610ffb573d6000803e3d6000fd5b50505050611080565b60675460405163468721a760e01b81526001600160a01b039091169063468721a79061103a908990899089908990600401611717565b6020604051808303816000875af1158015611059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107d9190611561565b91505b50949350505050565b600054610100900460ff166110b05760405162461bcd60e51b81526004016104ae90611583565b61034933610b18565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110f05750600090506003611174565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611144573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661116d57600060019250925050611174565b9150600090505b94509492505050565b6001600160a01b03811681146108b557600080fd5b6000602082840312156111a457600080fd5b81356103308161117d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111ee576111ee6111af565b604052919050565b600082601f83011261120757600080fd5b813567ffffffffffffffff811115611221576112216111af565b611234601f8201601f19166020016111c5565b81815284602083860101111561124957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561127957600080fd5b82359150602083013567ffffffffffffffff81111561129757600080fd5b6112a3858286016111f6565b9150509250929050565b6000806000606084860312156112c257600080fd5b833567ffffffffffffffff8111156112d957600080fd5b840161016081870312156112ec57600080fd5b95602085013595506040909401359392505050565b60008060006040848603121561131657600080fd5b83356113218161117d565b9250602084013567ffffffffffffffff8082111561133e57600080fd5b818601915086601f83011261135257600080fd5b81358181111561136157600080fd5b8760208260061b850101111561137657600080fd5b6020830194508093505050509250925092565b60006020828403121561139b57600080fd5b813567ffffffffffffffff8111156113b257600080fd5b6113be848285016111f6565b949350505050565b6000808335601e198436030181126113dd57600080fd5b83018035915067ffffffffffffffff8211156113f857600080fd5b602001915036819003821315610c4f57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561144c5761144c611423565b500190565b600060001982141561146557611465611423565b5060010190565b600082601f83011261147d57600080fd5b8151602067ffffffffffffffff821115611499576114996111af565b8160051b6114a88282016111c5565b92835284810182019282810190878511156114c257600080fd5b83870192505b848310156114ea5782516114db8161117d565b825291830191908301906114c8565b979650505050505050565b6000806000806080858703121561150b57600080fd5b84516115168161117d565b60208601519094506115278161117d565b604086015190935067ffffffffffffffff81111561154457600080fd5b6115508782880161146c565b606096909601519497939650505050565b60006020828403121561157357600080fd5b8151801515811461033057600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156115f657600080fd5b815167ffffffffffffffff81111561160d57600080fd5b6113be8482850161146c565b6000815180845260005b8181101561163f57602081850181015186830182015201611623565b81811115611651576000602083870101525b50601f01601f19169290920160200192915050565b6002811061168457634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038c81168252602082018c9052610160604083018190526000916116b58483018e611619565b91506116c4606085018d611666565b8a60808501528960a08501528860c085015280881660e08501528087166101008501528382036101208501526116fa8287611619565b925080851661014085015250509c9b505050505050505050505050565b60018060a01b038516815283602082015260806040820152600061173e6080830185611619565b905061174d6060830184611666565b9594505050505056fea264697066735822122094ef9d3cd5671f19ad07b8ffbf3d112e6bcea0c328256b04f2cfe0c0bd97ec0364736f6c634300080c0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type RecoveryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecoveryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Recovery__factory extends ContractFactory {
  constructor(...args: RecoveryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    avatar: PromiseOrValue<string>,
    target: PromiseOrValue<string>,
    _recoverers: PromiseOrValue<string>[],
    _quorum: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Recovery> {
    return super.deploy(
      avatar,
      target,
      _recoverers,
      _quorum,
      overrides || {}
    ) as Promise<Recovery>;
  }
  override getDeployTransaction(
    avatar: PromiseOrValue<string>,
    target: PromiseOrValue<string>,
    _recoverers: PromiseOrValue<string>[],
    _quorum: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      avatar,
      target,
      _recoverers,
      _quorum,
      overrides || {}
    );
  }
  override attach(address: string): Recovery {
    return super.attach(address) as Recovery;
  }
  override connect(signer: Signer): Recovery__factory {
    return super.connect(signer) as Recovery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecoveryInterface {
    return new utils.Interface(_abi) as RecoveryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Recovery {
    return new Contract(address, _abi, signerOrProvider) as Recovery;
  }
}
