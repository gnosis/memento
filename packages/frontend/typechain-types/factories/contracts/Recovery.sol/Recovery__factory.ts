/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Recovery,
  RecoveryInterface,
} from "../../../contracts/Recovery.sol/Recovery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "avatar",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_recoverers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_quorum",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoverer",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "AlreadyProposed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address",
      },
    ],
    name: "NotIERC165Compliant",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAvatar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAvatar",
        type: "address",
      },
    ],
    name: "AvatarSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "ChangedGuard",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "Replace",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousTarget",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
    ],
    name: "TargetSet",
    type: "event",
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "progress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoverer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "oldOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "newOwner",
            type: "address",
          },
        ],
        internalType: "struct Recovery.Replacement[]",
        name: "replacements",
        type: "tuple[]",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address",
      },
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setCounter2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testCounter2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260006068553480156200001657600080fd5b50604051620020e1380380620020e183398101604081905262000039916200061f565b60008484848460405160200162000054949392919062000692565b60408051601f19818403018152919052905062000071816200007c565b505050505062000740565b600054610100900460ff16158080156200009d5750600054600160ff909116105b80620000cd5750620000ba306200027160201b62000a841760201c565b158015620000cd575060005460ff166001145b620001365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156200015a576000805461ff0019166101001790555b6200016462000280565b600080600080858060200190518101906200018091906200061f565b93509350935093506200019984620002e860201b60201c565b620001a48362000344565b620001af84620003a0565b606981905560005b825181101562000221576001606a6000858481518110620001dc57620001dc62000700565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620002198162000716565b9050620001b7565b505050505080156200026d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620002dc5760405162461bcd60e51b815260206004820152602b6024820152600080516020620020c183398151915260448201526a6e697469616c697a696e6760a81b60648201526084016200012d565b620002e66200041f565b565b620002f262000486565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b6200034e62000486565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b620003aa62000486565b6001600160a01b038116620004115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200012d565b6200041c81620004e2565b50565b600054610100900460ff166200047b5760405162461bcd60e51b815260206004820152602b6024820152600080516020620020c183398151915260448201526a6e697469616c697a696e6760a81b60648201526084016200012d565b620002e633620004e2565b6033546001600160a01b03163314620002e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200012d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200041c57600080fd5b8051620005578162000534565b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200058457600080fd5b815160206001600160401b0380831115620005a357620005a36200055c565b8260051b604051601f19603f83011681018181108482111715620005cb57620005cb6200055c565b604052938452858101830193838101925087851115620005ea57600080fd5b83870191505b84821015620006145762000604826200054a565b83529183019190830190620005f0565b979650505050505050565b600080600080608085870312156200063657600080fd5b8451620006438162000534565b6020860151909450620006568162000534565b60408601519093506001600160401b038111156200067357600080fd5b620006818782880162000572565b606096909601519497939650505050565b60006080820160018060a01b0380881684526020818816818601526080604086015282875180855260a087019150828901945060005b81811015620006e8578551851683529483019491830191600101620006c8565b50508094505050505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200073957634e487b7160e01b600052601160045260246000fd5b5060010190565b61197180620007506000396000f3fe6080604052600436106101395760003560e01c8063a2b90473116100ab578063c0e20d0e1161006f578063c0e20d0e1461036a578063c91063891461038a578063d356aeb8146103a8578063d4b83992146103be578063e19a9dd9146103de578063f2fde38b146103fe57600080fd5b8063a2b90473146102d8578063a4f9edbf146102f8578063affed0e014610318578063b0d691fe1461032d578063bd1ebeed1461035457600080fd5b8063715018a6116100fd578063715018a614610218578063776d1a011461022d5780637aebd2a81461024d5780637ceab3b11461027a5780638bb5d9c31461029a5780638da5cb5b146102ba57600080fd5b8063086cfca8146101455780631626ba7e146101675780631703a0181461019c5780633a871cdd146101c05780635aef7de6146101e057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061016561016036600461135e565b61041e565b005b34801561017357600080fd5b50610187610182366004611432565b610478565b60405190151581526020015b60405180910390f35b3480156101a857600080fd5b506101b260695481565b604051908152602001610193565b3480156101cc57600080fd5b506101b26101db366004611479565b6104b2565b3480156101ec57600080fd5b50606654610200906001600160a01b031681565b6040516001600160a01b039091168152602001610193565b34801561022457600080fd5b506101656104f6565b34801561023957600080fd5b5061016561024836600461135e565b61050a565b34801561025957600080fd5b506101b26102683660046114cd565b606c6020526000908152604090205481565b34801561028657600080fd5b50606554610200906001600160a01b031681565b3480156102a657600080fd5b506101656102b53660046114cd565b610564565b3480156102c657600080fd5b506033546001600160a01b0316610200565b3480156102e457600080fd5b506101656102f33660046114e6565b610571565b34801561030457600080fd5b5061016561031336600461156e565b61074a565b34801561032457600080fd5b506068546101b2565b34801561033957600080fd5b50730576a174d229e3cfa37253523e645a78a0c91b57610200565b34801561036057600080fd5b506101b2606e5481565b34801561037657600080fd5b506101656103853660046114cd565b606e55565b34801561039657600080fd5b506065546001600160a01b0316610200565b3480156103b457600080fd5b506101b2606d5481565b3480156103ca57600080fd5b50606754610200906001600160a01b031681565b3480156103ea57600080fd5b506101656103f936600461135e565b610909565b34801561040a57600080fd5b5061016561041936600461135e565b610a0b565b610426610a93565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b6000606a60006104888585610aed565b6001600160a01b0316815260208101919091526040016000205460ff161515600114905092915050565b60006104bc610b11565b6104c68484610b74565b90506104d560408501856115ab565b151590506104e6576104e684610c35565b6104ef82610c8b565b9392505050565b6104fe610a93565b6105086000610ce4565b565b610512610a93565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b61056c610b11565b606d55565b610579610b11565b60005b81811015610744576000838383818110610598576105986115f2565b6105ae926020604090920201908101915061135e565b905060008484848181106105c4576105c46115f2565b90506040020160200160208101906105dc919061135e565b9050600082826040516020016106089291906001600160a01b0392831681529116602082015260400190565b60408051601f1981840301815291815281516020928301206001600160a01b038a166000908152606b845282812082825290935291205490915060ff1615610683576040516392652d6360e01b81526001600160a01b0380891660048301528085166024830152831660448201526064015b60405180910390fd5b6001600160a01b0387166000908152606b602090815260408083208484528252808320805460ff19166001908117909155606c9092528220546106c59161161e565b905060695481141561071f576106db8484610d36565b604080516001600160a01b038087168252851660208201527ff9b9728992035fb206d0eaedc55220cb1bdb49372cd3311f2b44399a2d246c43910160405180910390a15b6000918252606c6020526040909120555081905061073c81611636565b91505061057c565b50505050565b600054610100900460ff161580801561076a5750600054600160ff909116105b806107845750303b158015610784575060005460ff166001145b6107e75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161067a565b6000805460ff19166001179055801561080a576000805461ff0019166101001790555b610812610dad565b6000806000808580602001905181019061082c91906116da565b935093509350935061083d8461041e565b6108468361050a565b61084f84610a0b565b606981905560005b82518110156108ba576001606a6000858481518110610878576108786115f2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556108b381611636565b9050610857565b50505050508015610905576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610911610a93565b6001600160a01b038116156109b7576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190611746565b6109b7576040516358b7533f60e11b81526001600160a01b038216600482015260240161067a565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b610a13610a93565b6001600160a01b038116610a785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067a565b610a8181610ce4565b50565b6001600160a01b03163b151590565b6033546001600160a01b031633146105085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067a565b6000806000610afc8585610ddc565b91509150610b0981610e22565b509392505050565b33730576a174d229e3cfa37253523e645a78a0c91b57146105085760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161067a565b600080610bce836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610c1c81610be26101408701876115ab565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061047892505050565b610c27576001610c2a565b60005b60ff16949350505050565b606880546020830135916000610c4a83611636565b9190505514610a815760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015260640161067a565b8015610a8157604051600090339060001990849084818181858888f193505050503d8060008114610cd8576040519150601f19603f3d011682016040523d82523d6000602084013e610cdd565b606091505b5050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606654610da8906001600160a01b03166000610d5185610f70565b6040516001600160a01b0391821660248201528187166044820152908516606482015260840160408051601f198184030181529190526020810180516001600160e01b031663e318b52b60e01b179052600061104c565b505050565b600054610100900460ff16610dd45760405162461bcd60e51b815260040161067a90611768565b610508611255565b600080825160411415610e135760208301516040840151606085015160001a610e0787828585611285565b94509450505050610e1b565b506000905060025b9250929050565b6000816004811115610e3657610e366117b3565b1415610e3f5750565b6001816004811115610e5357610e536117b3565b1415610ea15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161067a565b6002816004811115610eb557610eb56117b3565b1415610f035760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161067a565b6003816004811115610f1757610f176117b3565b1415610a815760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161067a565b6066546040805163a0e67e2b60e01b815290516001926000926001600160a01b039091169163a0e67e2b9160048082019286929091908290030181865afa158015610fbf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fe791908101906117c9565b905060005b8151811015611045576000828281518110611009576110096115f2565b60200260200101519050846001600160a01b0316816001600160a01b031614156110335750611045565b925061103e81611636565b9050610fec565b5050919050565b6065546000906001600160a01b031680156111d0576040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b038316916375f0bb52916110b7918a918a918a918a916000918291829182918291339060040161186d565b600060405180830381600087803b1580156110d157600080fd5b505af11580156110e5573d6000803e3d6000fd5b505060675460405163468721a760e01b81526001600160a01b03909116925063468721a7915061111f9089908990899089906004016118fc565b6020604051808303816000875af115801561113e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111629190611746565b604051631264e26d60e31b815261060f60f31b600482015281151560248201529092506001600160a01b03821690639327136890604401600060405180830381600087803b1580156111b357600080fd5b505af11580156111c7573d6000803e3d6000fd5b5050505061124c565b60675460405163468721a760e01b81526001600160a01b039091169063468721a7906112069089908990899089906004016118fc565b6020604051808303816000875af1158015611225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112499190611746565b91505b50949350505050565b600054610100900460ff1661127c5760405162461bcd60e51b815260040161067a90611768565b61050833610ce4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112bc5750600090506003611340565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611310573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661133957600060019250925050611340565b9150600090505b94509492505050565b6001600160a01b0381168114610a8157600080fd5b60006020828403121561137057600080fd5b81356104ef81611349565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113ba576113ba61137b565b604052919050565b600082601f8301126113d357600080fd5b813567ffffffffffffffff8111156113ed576113ed61137b565b611400601f8201601f1916602001611391565b81815284602083860101111561141557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561144557600080fd5b82359150602083013567ffffffffffffffff81111561146357600080fd5b61146f858286016113c2565b9150509250929050565b60008060006060848603121561148e57600080fd5b833567ffffffffffffffff8111156114a557600080fd5b840161016081870312156114b857600080fd5b95602085013595506040909401359392505050565b6000602082840312156114df57600080fd5b5035919050565b6000806000604084860312156114fb57600080fd5b833561150681611349565b9250602084013567ffffffffffffffff8082111561152357600080fd5b818601915086601f83011261153757600080fd5b81358181111561154657600080fd5b8760208260061b850101111561155b57600080fd5b6020830194508093505050509250925092565b60006020828403121561158057600080fd5b813567ffffffffffffffff81111561159757600080fd5b6115a3848285016113c2565b949350505050565b6000808335601e198436030181126115c257600080fd5b83018035915067ffffffffffffffff8211156115dd57600080fd5b602001915036819003821315610e1b57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561163157611631611608565b500190565b600060001982141561164a5761164a611608565b5060010190565b600082601f83011261166257600080fd5b8151602067ffffffffffffffff82111561167e5761167e61137b565b8160051b61168d828201611391565b92835284810182019282810190878511156116a757600080fd5b83870192505b848310156116cf5782516116c081611349565b825291830191908301906116ad565b979650505050505050565b600080600080608085870312156116f057600080fd5b84516116fb81611349565b602086015190945061170c81611349565b604086015190935067ffffffffffffffff81111561172957600080fd5b61173587828801611651565b606096909601519497939650505050565b60006020828403121561175857600080fd5b815180151581146104ef57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156117db57600080fd5b815167ffffffffffffffff8111156117f257600080fd5b6115a384828501611651565b6000815180845260005b8181101561182457602081850181015186830182015201611808565b81811115611836576000602083870101525b50601f01601f19169290920160200192915050565b6002811061186957634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038c81168252602082018c90526101606040830181905260009161189a8483018e6117fe565b91506118a9606085018d61184b565b8a60808501528960a08501528860c085015280881660e08501528087166101008501528382036101208501526118df82876117fe565b925080851661014085015250509c9b505050505050505050505050565b60018060a01b038516815283602082015260806040820152600061192360808301856117fe565b9050611932606083018461184b565b9594505050505056fea26469706673582212207a4a3cc52427006f8c836bbc844d5e8f38032d148241f3cfaae7a0fc92373d0d64736f6c634300080c0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type RecoveryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecoveryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Recovery__factory extends ContractFactory {
  constructor(...args: RecoveryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    avatar: PromiseOrValue<string>,
    target: PromiseOrValue<string>,
    _recoverers: PromiseOrValue<string>[],
    _quorum: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Recovery> {
    return super.deploy(
      avatar,
      target,
      _recoverers,
      _quorum,
      overrides || {}
    ) as Promise<Recovery>;
  }
  override getDeployTransaction(
    avatar: PromiseOrValue<string>,
    target: PromiseOrValue<string>,
    _recoverers: PromiseOrValue<string>[],
    _quorum: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      avatar,
      target,
      _recoverers,
      _quorum,
      overrides || {}
    );
  }
  override attach(address: string): Recovery {
    return super.attach(address) as Recovery;
  }
  override connect(signer: Signer): Recovery__factory {
    return super.connect(signer) as Recovery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecoveryInterface {
    return new utils.Interface(_abi) as RecoveryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Recovery {
    return new Contract(address, _abi, signerOrProvider) as Recovery;
  }
}
